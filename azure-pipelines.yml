# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master
- develop

pool:
  vmImage: ubuntu-latest

variables:
  buildOutput: 'build'
  package.id: 'rest-api-calculator'
  BRANCH: '$(Build.SourceBranchName)'

steps:
- task: InstallSSHKey@0
  inputs:
    knownHostsEntry: 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ=='
    sshPublicKey: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDSECxgAv42P68u3EY708o+cc6rUMSgYc4b9uT0qnEmvxHhh4gziZnIm05Vp6+7gNbYh62Pv3zQlKsmv2xMlVdHBbrz6D0K/YbGQNpma8K+mu0imF6yGuLwyk/MlHqtJh7DRIxdulMz7PrA1j6s9kcagePqht1pXBRY5/CjJzKbi+sSpvX3x5/JKhiw5Qazfm3xBQKS8BLm61CmNNUlm8mO748sGDVUxGGSXJHMDG5ES6nBJBRH9lWkM8DbObshARodXK3zGprXzQPHckVMhE2FgjznldZ+n9aoeG4xozobp1IdjWIblDsvjK0916WRaoN3pqb9+p2WN6BR6jBjLoLfOOvJHcNJZD153EtK+aB8Kwc6W+uVB3AXBzI5zmvpdItNAWbSteFhzTqa6CfRDJ5dkJ/bWwuSUc5ZMK3y9QU+i7uq0n79fTGQa0+fBm0gDeEQ7iAlVWr8+FQ3FI7rDsX4yTN3oj9klQ/HTxo5v8BPfk373DXCJ4piFR9xl5taB+C9NU3sh/BeNiUewwinn8zuvKWzYgw+rqTW55CjbvKmzSorI7yzhh7s0IAWDnFDiKtimpxeAnZ7iWGU26K1vypQBgjcvVx4csdUp/eeTDA/3uWRfTxFf4xMiLCJBCEUyEY/KXF1cFoVVMd4YUTLBcxijursBsWQkkoE9RuiSbrL8w== eliudiaz@gmail.com'
    sshKeySecureFile: 'id_rsa_gh_personal'

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package -X -e -Dmaven.test.skip=true -P exec_bash'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # Write your PowerShell commands here.
      
      [xml]$pomXml = Get-Content .\pom.xml
        # version
        Write-Host $pomXml.project.version
        $version=$pomXml.project.version
        Write-Host "##vso[task.setvariable variable=version]$version"
  displayName: 'Get versio from pom'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**/*.jar'
    TargetFolder: '$(buildOutput)'
  displayName: 'copying jar files to build output folder'

- task: OctopusPack@4
  inputs:
    PackageId: '$(package.id)'
    PackageFormat: 'Zip'
    PackageVersion: '$(version)'
    SourcePath: '$(buildOutput)/target'
    OutputPath: '$(Build.ArtifactStagingDirectory)/packages'

- task: OctopusPush@4
  inputs:
    OctoConnectedServiceName: 'octopus deploy'
    Space: 'Spaces-2'
    Package: '$(Build.ArtifactStagingDirectory)/packages/*.zip'
    Replace: 'true'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: '$(Build.BuildNumber)'
    publishLocation: 'Container'